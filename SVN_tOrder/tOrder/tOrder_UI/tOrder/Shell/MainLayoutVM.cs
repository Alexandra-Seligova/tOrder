//===================================================================
// $Workfile:: MainLayoutVM.cs                                     $
// $Author:: Alexandra_Seligova                                     $
// $Revision:: 4                                                   $
// $Date:: 2025-06-11 15:44:33 +0200 (st, 11 ƒçvn 2025)            $
//===================================================================
// Description: SPC - tOrder
//     ViewModel for the Layout control ‚Äì heading, navigation, breadcrumbs
//===================================================================

namespace tOrder.Shell
{
    //-----------------------------------------------------------
    #region Using directives
    //-----------------------------------------------------------

    using System;
    using System.Diagnostics;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Collections.ObjectModel;

    using CommunityToolkit.Mvvm.ComponentModel;
    using CommunityToolkit.Mvvm.Input;

    using tOrder.Common;
    using tOrder.UI;

    #endregion //Using directives

    //===================================================================
    // class NavigationItemModel
    //===================================================================

    /// <summary>
    /// Model reprezentuj√≠c√≠ jednu polo≈æku navigace.
    /// </summary>
    public class NavigationItemModel
    {
        public string IconKind { get; }
        public string Glyph { get; }
        public string Label { get; }
        public string Tag { get; }

        public NavigationItemModel(string iconKind, string glyph, string label, string tag)
        {
            IconKind = iconKind;
            Glyph = glyph;
            Label = label;
            Tag = tag;
        }
    }

    //===================================================================
    // class MainLayoutVM
    //===================================================================

    /// <summary>
    /// ViewModel pro hlavn√≠ layout ‚Äì spravuje titulek, navigaci a breadcrumbs.
    /// </summary>
    public partial class MainLayoutVM : BaseVM
    {
        //-----------------------------------------------------------
        #region Fields
        //-----------------------------------------------------------

        private readonly IDataService _dataService;
        private readonly TopBarVM _topBarViewModel;

        #endregion //Fields

        //-----------------------------------------------------------
        #region Observable Properties
        //-----------------------------------------------------------

        [ObservableProperty]
        private string currentHeader = string.Empty;

        [ObservableProperty]
        private string? selectedPageTag;

        [ObservableProperty]
        private ObservableCollection<NavigationItemModel> menuItems = [];

        [ObservableProperty]
        private ObservableCollection<string> breadcrumbItems = [];

        #endregion //Observable Properties

        //-----------------------------------------------------------
        #region Constructor
        //-----------------------------------------------------------

        public MainLayoutVM(
            INavigationService navigationService,
            INotificationService notificationService,
            IUserContextService userContext,
            IDataService dataService,
            TopBarVM topBarViewModel)
            : base(navigationService, notificationService, userContext)
        {
            _dataService = dataService;
            _topBarViewModel = topBarViewModel;
        }

        #endregion //Constructor

        //-----------------------------------------------------------
        #region Initialization
        //-----------------------------------------------------------

        public override async Task InitializeAsync()
        {
            await LoadNavigationItemsAsync();
        }

        private async Task LoadNavigationItemsAsync()
        {
            try
            {
                var navItems = await _dataService.GetNavigationItemsAsync();

                MenuItems = navItems is null
                    ? []
                    : new ObservableCollection<NavigationItemModel>(navItems);
            }
            catch (Exception ex)
            {
#if DEBUG
                Debug.WriteLine($"[DEBUG] V√Ωjimka p≈ôi naƒç√≠t√°n√≠ navigace: {ex}");
                Debugger.Break();
#endif
                MenuItems = [];
            }
        }

        #endregion //Initialization

        //-----------------------------------------------------------
        #region Commands
        //-----------------------------------------------------------

        [RelayCommand]
        private void SetHeader(string header)
        {
            if (string.IsNullOrWhiteSpace(header))
            {
#if DEBUG
                Debug.WriteLine("[DEBUG] Pokus o nastaven√≠ pr√°zdn√©ho titulku.");
                Debugger.Break();
#endif
                return;
            }

            CurrentHeader = header;
            _topBarViewModel.Heading = header;
        }

        [RelayCommand]
        private void AddBreadcrumbItem(string item)
        {
            if (string.IsNullOrWhiteSpace(item))
            {
#if DEBUG
                Debug.WriteLine("[DEBUG] Pokus o p≈ôid√°n√≠ pr√°zdn√© breadcrumb polo≈æky.");
                Debugger.Break();
#endif
                return;
            }

            BreadcrumbItems.Add(item);
        }

        #endregion //Commands
    }

    //===================================================================
}

/*
=========================================================================
üìò LayoutViewModel ‚Äì p≈ôehled funkcionality
=========================================================================

Tento ViewModel obsluhuje hlavn√≠ layout aplikace, kter√Ω kombinuje:
- horn√≠ z√°hlav√≠ (nap≈ô. aktu√°ln√≠ sekce, n√°zev str√°nky),
- navigaƒçn√≠ menu s v√Ωbƒõrem str√°nek (Sidebar),
- spr√°vu aktivn√≠ str√°nky (SelectedPageTag).

Zaji≈°≈•uje:
‚úîÔ∏è Dynamick√© naƒç√≠t√°n√≠ polo≈æek menu (`MenuItems`) ze `IDataService` (mock nebo budouc√≠ API),
‚úîÔ∏è Aktualizaci z√°hlav√≠ pomoc√≠ `CurrentHeader` a p≈ô√≠kazu `SetHeaderCommand`,
‚úîÔ∏è Spolupr√°ci s `TopBarViewModel` (nap≈ô. pro zobrazen√≠ zpƒõtn√© navigace, p≈ôihl√°≈°en√©ho u≈æivatele),
‚úîÔ∏è Dynamick√© sestavov√°n√≠ breadcrumb cesty (`BreadcrumbItems`), kter√° se zobrazuje v horn√≠ li≈°tƒõ,
‚úîÔ∏è Respektov√°n√≠ MVVM architektury ‚Äì ≈æ√°dn√° UI logika, ƒçist√© datov√© ≈ô√≠zen√≠.

T≈ô√≠da `NavigationItemModel` je souƒç√°st√≠ tohoto ViewModelu a pou≈æ√≠v√° se v√Ωhradnƒõ pro √∫ƒçely layout navigace.
*/

/*
=========================================================================
‚ö† Omezen√≠ LayoutViewModel ‚Äì s ƒç√≠m z√°mƒõrnƒõ nepoƒç√≠t√°me
=========================================================================

‚úò Nepodporuje v√≠ce√∫rov≈àov√© menu nebo dynamick√© submenu ‚Äì pouze jednoduch√Ω seznam.
‚úò Nespou≈°t√≠ navigaci automaticky ‚Äì pouze nastavuje vybran√© tagy a z√°hlav√≠.
‚úò Nepodporuje persistenci stavu (nap≈ô. zapamatov√°n√≠ posledn√≠ str√°nky).
‚úò Nepodporuje √∫pravu nebo p≈ôid√°v√°n√≠ polo≈æek menu za bƒõhu.
‚úò T≈ô√≠da `NavigationItemModel` je lok√°ln√≠ ‚Äì nen√≠ urƒçena pro sd√≠len√≠ mezi ViewModely nebo slu≈æbami.
‚úò Zat√≠m ≈æ√°dn√° podpora opr√°vnƒõn√≠/rol√≠ ‚Äì v≈°echny polo≈æky menu jsou v≈ædy viditeln√©.
‚úò Ne≈ôe≈°√≠ zobrazov√°n√≠ ikon ‚Äì to je √∫kolem View (nap≈ô. p≈ôes `FontIcon.Glyph`).

V p≈ô√≠padƒõ pot≈ôeby bude v budoucnu vytvo≈ôen LayoutController nebo NavigationService pro slo≈æitƒõj≈°√≠ sc√©n√°≈ôe.
*/
